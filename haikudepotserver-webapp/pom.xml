<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <artifactId>haikudepotserver-parent</artifactId>
        <groupId>org.haiku</groupId>
        <relativePath>../haikudepotserver-parent</relativePath>
        <version>1.0.136-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>haikudepotserver-webapp</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>org.haiku</groupId>
            <artifactId>haikudepotserver-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.haiku</groupId>
            <artifactId>haikudepotserver-docs</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.haiku</groupId>
            <artifactId>haikudepotserver-api2</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- used to render markdown to html -->
        <dependency>
            <groupId>com.vladsch.flexmark</groupId>
            <artifactId>flexmark</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vladsch.flexmark</groupId>
            <artifactId>flexmark-ext-tables</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.dtrunk90</groupId>
            <artifactId>thymeleaf-jawr-extension</artifactId>
            <version>2.0.3</version>
        </dependency>


        <!-- required because jee apis are not included by default now and this
        seems to be required by jsonrpc4j. -->

        <dependency>
            <groupId>javax.jws</groupId>
            <artifactId>jsr181-api</artifactId>
            <version>1.0-MR1</version>
        </dependency>

        <dependency>
            <groupId>net.jawr</groupId>
            <artifactId>jawr-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
            <version>0.27</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>angularjs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>underscorejs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>momentjs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>modernizr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>lru-cache</artifactId>
        </dependency>

        <!-- This one will pull in the ...-core module's test resources so that they
        can be used here in these tests.  This is very useful for setting up scenarios.
        -->

        <dependency>
            <groupId>org.haiku</groupId>
            <artifactId>haikudepotserver-core-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>jawr.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>jawr.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- https://stackoverflow.com/questions/50787704/maven-failsafe-fails-with-java-lang-noclassdeffounderror -->
                <configuration>
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>${groupId}:${artifactId}</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.outputDirectory}</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>

            <!--
            This plugin handles jasmine java-script tests that can be
            executed as part of the 'test' lifecycle.
            -->

            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>

                <configuration>

                    <!--
                    http://gotofritz.net/blog/geekery/configuration-jasmine-maven-plugin/
                    http://searls.github.io/jasmine-maven-plugin/test-mojo.html
                    -->

                    <preloadSources>
                        <source>/webjars/momentjs/${web-momentjs.versionbase}/min/moment.min.js</source>
                        <source>/webjars/underscorejs/${web-underscorejs.versionbase}/underscore-min.js</source>
                        <source>/webjars/angularjs/${web-angularjs.versionbase}/angular.min.js</source>
                        <source>/webjars/angularjs/${web-angularjs.versionbase}/angular-route.min.js</source>
                        <source>/webjars/angularjs/${web-angularjs.versionbase}/angular-mocks.js</source>
                        <source>/webjars/modernizr/${web-modernizr.versionbase}/modernizr.min.js</source>
                        <source>/webjars/lru-cache/${web-lru-cache.versionbase}/lib/lru-cache.js</source>
                    </preloadSources>

                    <jsSrcDir>${project.basedir}/src/main/webapp/js/app</jsSrcDir>
                    <jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>

                    <!--<sourceExcludes>-->
                    <!--<exclude>haikudepotserver.js</exclude>-->
                    <!--</sourceExcludes>-->

                    <webDriverClassName>org.openqa.selenium.firefox.FirefoxDriver</webDriverClassName>
                    <haltOnFailure>true</haltOnFailure>
                    <skipTests>false</skipTests>

                </configuration>

            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
